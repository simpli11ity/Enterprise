{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peter\\\\Desktop\\\\Enterprise application dev\\\\Eccomerce\\\\eccommerce\\\\src\\\\Componets\\\\Forms\\\\UploadItem.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport axios from \"axios\";\nimport fire from '../../cofigFile/firebase';\n\nclass Upload extends Component {\n  // Get a reference to the database service\n  constructor(props) {\n    super(props);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\n    this.onChangePicture = this.onChangeSelectedFile.bind(this);\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n    this.state = {\n      name: \"\",\n      descriptionx: \"\",\n      item_quantity: \"\",\n      selectedFile: null\n    };\n  } //    fileSelectedHandler  = event => {\n  //     this.setState({\n  //      selectedFile: event.target.files[0],\n  //   })\n  //}\n\n\n  onChangeDescription(e) {\n    this.setState({\n      descriptionx: e.target.value\n    });\n  }\n\n  onChangeQuantity(e) {\n    this.setState({\n      item_quantity: e.target.value\n    });\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeSelectedFile(e) {\n    this.setState({\n      selectedFile: e.target.files[0]\n    });\n  }\n\n  onSubmitForm() {\n    //submit logic lol\n    console.log(\"Name  \" + this.state.name);\n    console.log(\"Description  \" + this.state.descriptionx);\n    console.log(\"Quanity  \" + this.state.item_quantity);\n    console.log(\"Picture  \" + this.state.selectedFile.name);\n    var name = this.state.name;\n    var desccrriptiomn = this.state.descriptionx;\n    var Quanity = this.state.Quanity;\n    var url = this.state.selectedFile; //firebase storage to store image return url\n    //TODO\n\n    var image = this.state.selectedFile;\n    var user = fire.auth().currentUser;\n    var filename = this.state.selectedFile.name;\n    var storageRef = fire.storage().ref('/pictures/' + filename);\n    var uploadTask = storageRef.put(this.state.selectedFile); //create new item object to submit\n\n    uploadTask.on('state_changed', function (snapshot) {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log('Upload is ' + progress + '% done');\n    }, function (error) {\n      console.log(error); // Handle unsuccessful uploads\n\n      console.log('Upload was unsuccessful');\n    }, function () {\n      uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n        //consoleconsoleconsoleconsole.log('File available at', downloadURL);\n        //console.log(\"Name: \" +filename)\n        if (image) {\n          //change satate to include url\n          console.log(downloadURL);\n          const newItemObject = {\n            item_name: name,\n            item_description: desccrriptiomn,\n            item_quantity: Quanity,\n            selectedFile: downloadURL\n          }; // post moethord from axios to add data\n\n          axios.post(\"http://localhost:4000/item/add\", newItemObject).then(res => {\n            console.log(res.data);\n          });\n        } else {\n          console.log(\"get ur shit together\");\n        }\n      });\n    });\n    this.setState({\n      name: \"\",\n      descriptionx: \"\",\n      item_quantity: \"\",\n      selectedFile: null\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"40%\",\n        border: '2px solid black',\n        borderRadius: \"25px\",\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"10%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, \"New Item\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      form: \"F1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"90%\"\n      },\n      type: \"text\",\n      className: \"form-control\",\n      id: \"name\",\n      placeholder: \"description\",\n      value: this.state.name,\n      onChange: this.onChangeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      form: \"F1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"90%\"\n      },\n      type: \"text\",\n      className: \"form-control\",\n      id: \"desccrriptiomn\",\n      placeholder: \"description\",\n      value: this.state.descriptionx,\n      onChange: this.onChangeDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      form: \"F2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"90%\"\n      },\n      type: \"text\",\n      className: \"form-control\",\n      id: \"desccrriptiomn\",\n      placeholder: \"Quantity\",\n      value: this.state.item_quantity,\n      onChange: this.onChangeQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleFormControlFile1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, \"Upload Item\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control-file\",\n      id: \"exampleFormControlFile1\",\n      onChange: this.onChangePicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, \"Upload\"))));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["C:/Users/Peter/Desktop/Enterprise application dev/Eccomerce/eccommerce/src/Componets/Forms/UploadItem.js"],"names":["React","Component","Button","axios","fire","Upload","constructor","props","onChangeName","bind","onChangeDescription","onChangeQuantity","onChangePicture","onChangeSelectedFile","onSubmitForm","state","name","descriptionx","item_quantity","selectedFile","e","setState","target","value","files","console","log","desccrriptiomn","Quanity","url","image","user","auth","currentUser","filename","storageRef","storage","ref","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","error","getDownloadURL","then","downloadURL","newItemObject","item_name","item_description","post","res","data","render","width","border","borderRadius","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport axios from \"axios\";\r\nimport fire from '../../cofigFile/firebase';\r\n\r\nclass Upload extends Component {\r\n    // Get a reference to the database service\r\n    constructor(props){\r\n      super(props)\r\n      this.onChangeName=this.onChangeName.bind(this);\r\n      this.onChangeDescription=this.onChangeDescription.bind(this);\r\n      this.onChangeQuantity=this.onChangeQuantity.bind(this);\r\n      this.onChangePicture=this.onChangeSelectedFile.bind(this);\r\n      this.onSubmitForm=this.onSubmitForm.bind(this);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      descriptionx: \"\",\r\n      item_quantity:\"\",\r\n      selectedFile : null\r\n\r\n    };\r\n    }\r\n\r\n//    fileSelectedHandler  = event => {\r\n //     this.setState({\r\n  //      selectedFile: event.target.files[0],\r\n   //   })\r\n    //}\r\n\r\n    onChangeDescription(e){\r\n      this.setState({\r\n        descriptionx : e.target.value\r\n      });\r\n\r\n    }\r\n\r\n    onChangeQuantity(e){\r\n      this.setState({\r\n        item_quantity : e.target.value\r\n      });\r\n\r\n    }\r\n\r\n    onChangeName(e){\r\n      this.setState({\r\n        name : e.target.value\r\n      });\r\n\r\n    }\r\n\r\n    \r\n    onChangeSelectedFile(e){\r\n        this.setState({\r\n          selectedFile : e.target.files[0]\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    onSubmitForm() { \r\n\r\n\r\n      //submit logic lol\r\n      console.log(\"Name  \"+this.state.name)\r\n      console.log(\"Description  \"+this.state.descriptionx)\r\n      console.log(\"Quanity  \" +this.state.item_quantity)\r\n      console.log(\"Picture  \" +this.state.selectedFile.name)\r\n      var name = this.state.name;\r\n      var desccrriptiomn=this.state.descriptionx;\r\n      var Quanity=this.state.Quanity;\r\n      var url = this.state.selectedFile;\r\n      //firebase storage to store image return url\r\n      //TODO\r\n      var image = this.state.selectedFile;\r\n      var user = fire.auth().currentUser;\r\n      var filename = this.state.selectedFile.name;\r\n      var storageRef = fire.storage().ref('/pictures/' + filename);\r\n      var uploadTask = storageRef.put(this.state.selectedFile);\r\n      //create new item object to submit\r\n      uploadTask.on('state_changed', function(snapshot){\r\n        // Observe state change events such as progress, pause, and resume\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log('Upload is ' + progress + '% done');\r\n        \r\n      }, function(error) {\r\n        console.log(error)\r\n        // Handle unsuccessful uploads\r\n        console.log('Upload was unsuccessful')\r\n      }, function() {\r\n          uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n          //consoleconsoleconsoleconsole.log('File available at', downloadURL);\r\n          //console.log(\"Name: \" +filename)\r\n\r\n          if (image) {\r\n            //change satate to include url\r\n              console.log(downloadURL)\r\n              const newItemObject = {\r\n                item_name: name,\r\n                item_description: desccrriptiomn, \r\n                item_quantity: Quanity,\r\n                selectedFile: downloadURL\r\n            }\r\n\r\n          // post moethord from axios to add data\r\n            axios.post(\"http://localhost:4000/item/add\", newItemObject).then(\r\n              res => {\r\n                console.log(res.data);\r\n              }\r\n          )\r\n            \r\n            \r\n          }else{\r\n            console.log(\"get ur shit together\")\r\n          }\r\n\r\n        });\r\n      });\r\n\r\n\r\n\r\n      this.setState({\r\n          name : \"\",\r\n          descriptionx : \"\",\r\n          item_quantity : \"\",\r\n          selectedFile : null\r\n      });\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n  return (\r\n    <div  style={{ width:\"40%\",  border: '2px solid black' ,  borderRadius: \"25px\", margin:\"auto\"}}>\r\n      <div style={{margin:\"10%\"}}>\r\n      <form>\r\n      <h3>New Item</h3>\r\n      <div class=\"form-group\">\r\n      <label form=\"F1\">Name</label>\r\n        <input style={{width:\"90%\"}}type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"description\" value={this.state.name} onChange={this.onChangeName}/>\r\n       \r\n        <label form=\"F1\">Description</label>\r\n        <input style={{width:\"90%\"}}type=\"text\" className=\"form-control\" id=\"desccrriptiomn\" placeholder=\"description\" value={this.state.descriptionx} onChange={this.onChangeDescription}/>\r\n        <label form=\"F2\">Quantity</label>\r\n        <input style={{width:\"90%\"}}type=\"text\" className=\"form-control\" id=\"desccrriptiomn\" placeholder=\"Quantity\" value={this.state.item_quantity} onChange={this.onChangeQuantity}/>\r\n        <label for=\"exampleFormControlFile1\">Upload Item</label>\r\n        <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"  onChange={this.onChangePicture}/>  \r\n      </div>\r\n     \r\n\r\n\r\n\r\n\r\n      <Button onClick={this.onSubmitForm}>Upload</Button>\r\n    </form>\r\n    </div>\r\n    </div>\r\n    \r\n  );\r\n}}\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}