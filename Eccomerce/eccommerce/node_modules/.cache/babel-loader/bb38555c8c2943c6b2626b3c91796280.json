{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peter\\\\Desktop\\\\Enterprise application dev\\\\Eccomerce\\\\eccommerce\\\\src\\\\Componets\\\\PageComponents\\\\Addproduct.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nexport default class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      fileExists: null\n    };\n\n    this.fileSelectedHandler = event => {\n      this.setState({\n        selectedFile: event.target.files[0],\n        fileExists: true\n      });\n    };\n\n    this.ontruehandler = event => {\n      if (this.state.selectedFile) {\n        this.onUploadHandler();\n      } else {\n        this.setState({\n          fileExists: true\n        });\n      }\n    };\n\n    this.onUploadHandler = event => {\n      function convertDMStoDD(GPSLat, GPSLong) {\n        console.log(\"TEST LAT  : \" + GPSLat);\n        var long = GPSLong[0] + GPSLong[1] / 60 + GPSLong[2] / 3600;\n        var Lat1 = GPSLat[0] + GPSLat[1] / 60 + GPSLat[2] / 3600;\n        return [Lat1, long];\n      } //var database = fire.database();\n\n\n      var image = this.state.selectedFile;\n      var filename = this.state.selectedFile.name;\n      var user = fire.auth().currentUser; //console.log(\"User Token: \" + user.uid);\n\n      var min = new Date().getMinutes();\n      filename = \"M\" + min + filename;\n      var storageRef = fire.storage().ref('/pictures/' + filename);\n      var uploadTask = storageRef.put(this.state.selectedFile);\n      uploadTask.on('state_changed', function (snapshot) {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n      }, function (error) {\n        console.log(error); // Handle unsuccessful uploads\n\n        console.log('Upload was unsuccessful');\n      }, function () {\n        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          //consoleconsoleconsoleconsole.log('File available at', downloadURL);\n          //console.log(\"Name: \" +filename)\n          if (image) {\n            EXIF.getData(image, function () {\n              //console.log(image.exifdata);\n              var x = convertDMStoDD(image.exifdata.GPSLatitude, image.exifdata.GPSLongitude);\n              var newPostKey = fire.database().ref().child(user.uid).push().key;\n              fire.database().ref('users/' + user.uid + \"/\" + newPostKey + \"/\").set({\n                imageName: filename,\n                ImageUrl: downloadURL,\n                GPSLat: x[0],\n                GPSLong: x[1]\n              });\n            });\n          } else {\n            console.log(\"get ur shit together\");\n          }\n        });\n      }); //fire.database().ref('test-962dc/' + \"test\").set({\n      ///=  imageName: this.state.selectedFile.name,\n      //});\n      // Listen for state changes, errors, and completion of the upload.\n    };\n  }\n\n  //console.log(\"uploaded\")\n  //console.log(this.state.selectedFile.name)\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.fileSelectedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.ontruehandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, \"Upload\"), this.state.fileExists ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"File exists\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"file doesnt exist\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Peter/Desktop/Enterprise application dev/Eccomerce/eccommerce/src/Componets/PageComponents/Addproduct.js"],"names":["React","Component","Button","Upload","state","selectedFile","fileExists","fileSelectedHandler","event","setState","target","files","ontruehandler","onUploadHandler","convertDMStoDD","GPSLat","GPSLong","console","log","long","Lat1","image","filename","name","user","fire","auth","currentUser","min","Date","getMinutes","storageRef","storage","ref","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","error","getDownloadURL","then","downloadURL","EXIF","getData","x","exifdata","GPSLatitude","GPSLongitude","newPostKey","database","child","uid","push","key","set","imageName","ImageUrl","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default class Upload extends Component {\r\n    // Get a reference to the database service\r\n\r\n    \r\n    state = {\r\n      selectedFile: null,\r\n      fileExists: null,\r\n    }\r\n\r\n    \r\n    \r\n\r\n    fileSelectedHandler  = event => {\r\n      this.setState({\r\n        selectedFile: event.target.files[0],\r\n        fileExists: true\r\n      })\r\n    }\r\n\r\n    ontruehandler = event =>\r\n    {\r\n      if (this.state.selectedFile){\r\n        this.onUploadHandler()\r\n      }\r\n      else\r\n      {\r\n        this.setState({\r\n          fileExists:true\r\n        })\r\n      }\r\n    \r\n    }\r\n\r\n\r\n    onUploadHandler = event => {\r\n\r\n      function convertDMStoDD(GPSLat,GPSLong) { \r\n        console.log(\"TEST LAT  : \"+GPSLat)\r\n        var long = GPSLong[0] + (GPSLong[1]/60) + (GPSLong[2]/3600);\r\n        var Lat1 = GPSLat[0] + (GPSLat[1]/60) + (GPSLat[2]/3600);\r\n        return [Lat1,long];\r\n        \r\n      }\r\n     \r\n      \r\n      \r\n      //var database = fire.database();\r\n      var image = this.state.selectedFile;\r\n      var filename = this.state.selectedFile.name;\r\n      var user = fire.auth().currentUser;\r\n      //console.log(\"User Token: \" + user.uid);\r\n      var min = new Date().getMinutes();\r\n      filename = \"M\" + min + filename;\r\n      var storageRef = fire.storage().ref('/pictures/' + filename);\r\n      var uploadTask = storageRef.put(this.state.selectedFile);\r\n     \r\n      uploadTask.on('state_changed', function(snapshot){\r\n        // Observe state change events such as progress, pause, and resume\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log('Upload is ' + progress + '% done');\r\n        \r\n      }, function(error) {\r\n        console.log(error)\r\n        // Handle unsuccessful uploads\r\n        console.log('Upload was unsuccessful')\r\n      }, function() {\r\n          uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n          //consoleconsoleconsoleconsole.log('File available at', downloadURL);\r\n          //console.log(\"Name: \" +filename)\r\n\r\n          if (image) {\r\n            EXIF.getData(image, function() {\r\n            //console.log(image.exifdata);\r\n            var x = convertDMStoDD(image.exifdata.GPSLatitude,image.exifdata.GPSLongitude);\r\n            var newPostKey = fire.database().ref().child(user.uid).push().key;\r\n            fire.database().ref('users/'+user.uid+\"/\"+newPostKey+\"/\").set({\r\n              imageName: filename,\r\n              ImageUrl: downloadURL,\r\n              GPSLat: x[0],\r\n              GPSLong: x[1]\r\n            });\r\n            \r\n            \r\n            });\r\n          }else{\r\n            console.log(\"get ur shit together\")\r\n          }\r\n\r\n        });\r\n      });\r\n \r\n\r\n      //fire.database().ref('test-962dc/' + \"test\").set({\r\n      ///=  imageName: this.state.selectedFile.name,\r\n      //});\r\n// Listen for state changes, errors, and completion of the upload.\r\n\r\n\r\n    }\r\n      //console.log(\"uploaded\")\r\n      //console.log(this.state.selectedFile.name)\r\n\r\n\r\n    render(){\r\n  return (\r\n    <div >\r\n      <input type=\"file\" onChange={this.fileSelectedHandler}/>\r\n      <Button onClick={this.ontruehandler}>Upload</Button>\r\n      \r\n      {this.state.fileExists\r\n        ? <p>File exists</p>\r\n        : <p>file doesnt exist</p>\r\n      }\r\n\r\n    </div>\r\n  );\r\n}}\r\n\r\n"]},"metadata":{},"sourceType":"module"}